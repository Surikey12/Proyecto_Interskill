{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\roca1\\\\OneDrive\\\\Documentos\\\\Desarrollo web_suri\\\\PlataformaHabilidades\\\\frontend\\\\src\\\\pages\\\\ChatList.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Navbar from \"../components/Navbar\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ChatList() {\n  _s();\n  const [conversations, setConversations] = useState([]);\n  const [loading, setLoading] = useState(true);\n  //const location = useLocation();\n  //const { userId } = location.state || {};\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchConversations = async () => {\n      try {\n        const userId = localStorage.getItem(\"userId\");\n        const res = await axios.get(`http://localhost:5000/api/chats/${userId}`);\n        // Aseguramos que cada conversación muestre el último mensaje, no el primero\n        const formatted = res.data.map(conv => ({\n          ...conv,\n          lastMessage: conv.lastMessage || \"Sin mensajes aún\",\n          updatedAt: conv.updatedAt\n        }));\n        setConversations(formatted);\n      } catch (err) {\n        console.error(\"Error al obtener las conversaciones:\", err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchConversations();\n  }, []);\n  const handleOpenChat = (chatId, partnerName, partnerId) => {\n    console.log(\"Navegando al chat:\", chatId);\n    navigate(`/chat/${chatId}`, {\n      state: {\n        partnerName,\n        receiverId: partnerId\n      }\n    });\n  };\n  const formatDate = dateString => {\n    if (!dateString) return \"\";\n    const date = new Date(dateString);\n    const today = new Date();\n    // Mostrar solo la hora si es de hoy\n    if (date.toDateString() === today.toDateString()) {\n      return date.toLocaleTimeString([], {\n        hour: \"2-digit\",\n        minute: \"2-digit\"\n      });\n    }\n    // Sino, mostrar fecha corta\n    return date.toLocaleDateString([], {\n      day: \"2-digit\",\n      month: \"2-digit\",\n      year: \"2-digit\"\n    });\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center items-center h-screen\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600\",\n        children: \"Cargando conversaciones...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  }\n  //console.log(\"Conversaciones:\", conversations);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-3xl mx-auto mt-10 p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-3xl font-bold mb-6 text-color8 text-center\",\n        children: \"Mis Conversaciones\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), conversations.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center text-gray-500\",\n        children: \"No tienes conversaciones todav\\xEDa.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"divide-y divide-gray-200\",\n        children: conversations.map(conv => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => handleOpenChat(conv.chat_id, conv.partnerName, conv.partnerId),\n          className: \"p-4 bg-white border border-gray-200 rounded-xl shadow-sm cursor-pointer \\r hover:shadow-md hover:bg-gray-50 transition-all duration-200 flex justify-between items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-lg font-semibold\",\n              children: conv.partnerName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-500\",\n              children: [\"\\xDAltimo mensaje: \", conv.lastMessage || \"Sin mensajes aún\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-xs text-gray-400\",\n            children: formatDate(conv.updatedAt)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }, this)]\n        }, conv.chat_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(ChatList, \"FGBrGv2MZRUAPqD0CCWjuxETXas=\", false, function () {\n  return [useNavigate];\n});\n_c = ChatList;\nexport default ChatList;\nvar _c;\n$RefreshReg$(_c, \"ChatList\");","map":{"version":3,"names":["useEffect","useState","useNavigate","axios","Navbar","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatList","_s","conversations","setConversations","loading","setLoading","navigate","fetchConversations","userId","localStorage","getItem","res","get","formatted","data","map","conv","lastMessage","updatedAt","err","console","error","handleOpenChat","chatId","partnerName","partnerId","log","state","receiverId","formatDate","dateString","date","Date","today","toDateString","toLocaleTimeString","hour","minute","toLocaleDateString","day","month","year","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","onClick","chat_id","_c","$RefreshReg$"],"sources":["C:/Users/roca1/OneDrive/Documentos/Desarrollo web_suri/PlataformaHabilidades/frontend/src/pages/ChatList.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Navbar from \"../components/Navbar\";\r\n\r\nfunction ChatList() {\r\n  const [conversations, setConversations] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  //const location = useLocation();\r\n  //const { userId } = location.state || {};\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchConversations = async () => {\r\n      try {\r\n        const userId = localStorage.getItem(\"userId\");\r\n        const res = await axios.get(`http://localhost:5000/api/chats/${userId}`);\r\n        // Aseguramos que cada conversación muestre el último mensaje, no el primero\r\n        const formatted = res.data.map((conv) => ({\r\n          ...conv,\r\n          lastMessage: conv.lastMessage || \"Sin mensajes aún\",\r\n          updatedAt: conv.updatedAt,\r\n        }));\r\n\r\n        setConversations(formatted);\r\n      } catch (err) {\r\n        console.error(\"Error al obtener las conversaciones:\", err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchConversations();\r\n  }, []);\r\n\r\n  const handleOpenChat = (chatId, partnerName, partnerId) => {\r\n    console.log(\"Navegando al chat:\", chatId);\r\n    navigate(`/chat/${chatId}`, { state: { partnerName, receiverId: partnerId } });\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    if (!dateString) return \"\";\r\n    const date = new Date(dateString);\r\n    const today = new Date();\r\n    // Mostrar solo la hora si es de hoy\r\n    if (date.toDateString() === today.toDateString()) {\r\n      return date.toLocaleTimeString([], { hour: \"2-digit\", minute: \"2-digit\" });\r\n    }\r\n    // Sino, mostrar fecha corta\r\n    return date.toLocaleDateString([], { day: \"2-digit\", month: \"2-digit\", year: \"2-digit\" });\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex justify-center items-center h-screen\">\r\n        <p className=\"text-gray-600\">Cargando conversaciones...</p>\r\n      </div>\r\n    );\r\n  }\r\n  //console.log(\"Conversaciones:\", conversations);\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div className=\"max-w-3xl mx-auto mt-10 p-4\">\r\n        <h2 className=\"text-3xl font-bold mb-6 text-color8 text-center\">Mis Conversaciones</h2>\r\n\r\n        {conversations.length === 0 ? (\r\n          <p className=\"text-center text-gray-500\">\r\n            No tienes conversaciones todavía.\r\n          </p>\r\n        ) : (\r\n          <ul className=\"divide-y divide-gray-200\">\r\n            \r\n            {conversations.map((conv) => (\r\n              <li\r\n                key={conv.chat_id}\r\n                onClick={() => handleOpenChat(conv.chat_id, conv.partnerName, conv.partnerId)}\r\n                className=\"p-4 bg-white border border-gray-200 rounded-xl shadow-sm cursor-pointer \r\n                           hover:shadow-md hover:bg-gray-50 transition-all duration-200 flex justify-between items-center\"\r\n              >\r\n                <div className=\"flex flex-col\">\r\n                  <h3 className=\"text-lg font-semibold\">{conv.partnerName}</h3>\r\n                  <p className=\"text-sm text-gray-500\">\r\n                    Último mensaje: {conv.lastMessage || \"Sin mensajes aún\"}\r\n                  </p>\r\n                </div>\r\n                <span className=\"text-xs text-gray-400\">\r\n                  {formatDate(conv.updatedAt)}\r\n                </span>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ChatList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}